import * as Exp from "./exp";
import * as Value from "./value";
import * as Env from "./env";
import * as Scope from "./scope";
export declare function evaluate(env: Env.Env, exp: Exp.Exp): Value.Value;
export declare function evaluate_obj(env: Env.Env, scope: Scope.Scope): Value.Value;
export declare function evaluate_cl(env: Env.Env, scope: Scope.Scope): Value.Value;
export declare function evaluate_block(env: Env.Env, scope: Scope.Scope, body: Exp.Exp): Value.Value;
export declare function eliminate_ap(env: Env.Env, target: Value.Value, args: Array<Exp.Exp>): Value.Value;
export declare function eliminate_dot(env: Env.Env, target: Value.Value, field_name: string): Value.Value;
export declare function scope_to_type_map(scope: Scope.Scope, scope_env: Env.Env): Map<string, Value.Value>;
