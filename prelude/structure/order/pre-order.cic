class PreOrder {
  Elem : type
  Pre : { Elem; Elem -> type }
  reflexive : { a : Elem -> Pre(a, a) }
  transitive : { Pre(a, b); Pre(b, c) -> Pre(a, c) }
}

develop PreOrder {
  StrictPre : { a, b : Elem -> type } = {
    Pre(a, b) & NonEquation(Elem, a, b)
  }
}

// NOTE
// thin category
// hom_set(A, B).size <= 1
