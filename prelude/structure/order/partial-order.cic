package prelude.structure.order.PartialOrder

import prelude.structure.order.PreOrder

// NOTE
// - no cycle
// - can implement:
//   - topological sort
class PartialOrder extends PreOrder {
  @given(x: Elem, y: Elem)
  antisymmetric(Under(x, y), Under(y, x)): Equal(x, y)
}

class Beneath {
  order: PartialOrder
  x: order.Elem
  y: order.Elem
  strict_under: PreOrder.StrictUnder(order, x, y)
  nothing_in_between(
    z: Elem,
    order.Under(x, z),
    PreOrder.StrictUnder(z, y),
  ): Equal(Elem, z, x)
}
