class Monoid extends Semigroup {
  id : Elem
  id_left : { x : Elem -> TheEquation(Elem, mul(id, x), x) }
  id_right : { x : Elem -> TheEquation(Elem, mul(x, id), x) }
}

class Monoid {
  Elem : type
  id : Elem
  mul : { List(Elem) -> Elem }
  mul_id_left : { x : List(Elem) -> Equation(mul(append([id], x)), x) }
  mul_id_right : { x : List(Elem) -> Equation(mul(append(x, [id])), x) }
}

develop Monoid {
  as_category : Category = Category(
    Unit,
    (_ : Unit, _ : Unit) : Unit => Elem,
    (_ : Unit) : Elem => id,
    mul,
    id_left,
    id_left,
    associative)
}
