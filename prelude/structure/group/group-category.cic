package prelude.structure.group.Group

import prelude.structure.category.Category

// NOTE Example of big category.

class GroupHom {
  dom cod: Group
  hom(dom.Elem): cod.Elem

  hom_respect_mul(x: dom.Elem, y: dom.Elem): TheEqual(
    cod.Elem,
    hom(dom.mul(x, y)),
    cod.mul(hom(x), hom(y)))
}

id_group_hom(dom: Group): GroupHom(dom, dom) =
  new GroupHom(
    dom = dom,
    cod = dom,
    hom(x: dom.Elem): dom.Elem = x,
    hom_respect_mul(x: dom.Elem, y: dom.Elem) = same(dom.mul(x, y)),
  )

category = new Category(
  Object = Group,
  Morphism = GroupHom,
  id = id_group_hom,

  compose(f: GroupHom(a, b), g: GroupHom(b, c)) =
    new GroupHom(
      dom = a,
      cod = c,
      hom(x: a.Elem) = g.hom(f.hom(x)),
      hom_respect_mul(x: a.Elem, y: a.Elem) = same(g.hom(b.mul(f.hom(x), f.hom(y))))
    ),

  id_left(f: GroupHom(a, b)) = same(f),
  id_right(f: GroupHom(a, b)) = same(f),

  compose_associative(f: GroupHom(a, b), g: GroupHom(b, c), h: GroupHom(c, d)) = refl,
)
