Nat : Type
Nat = { Zero | Add1 }

Zero : Type
Zero = {
  kind : "Zero"
}

Add1 : Type
Add1 = {
  kind : "Add1"
  prev : Nat
}

zero : Nat
zero = {
  kind = "Zero"
}

add1 : (Nat) -> Nat
add1 = (prev) => {
  kind = "Add1"
  prev = prev
}

@datatype Vec : (Type) -> (Nat) -> Type {
  null: (T: Type) -> Vec(T)(zero)
  cons: (T: Type) -> (prev: Nat) -> (head: T) -> (tail: Vec(T)(prev)) -> Vec(T)(add1(prev))
}

@show Vec
