(_: String) * (_1: String) -> String -- cons("x", (_) => _)
Equal((_: String) * (_1: String) -> String, cons("x", (_) => _), cons("x", (_) => _)) -- same
Equal((_: Nat) -> (_1: Nat) * Nat, (_) => cons(_, _), (_) => cons(_, _)) -- same
Equal((_: Nat) -> Nat, (_) => _, (_) => _) -- same
Equal((_: (_: Nat) * Nat) -> Nat, (_) => car(_), (_) => car(_)) -- same
Equal((_: String) * String, cons("celery", "carrot"), cons("celery", "carrot")) -- same
Equal(String, "naught", "naught") -- same
Equal(String, "more", "more") -- same
Equal(String, "more", "more") -- same
(_: Type) * Type -- cons(String, String)
(_: Nat) * Nat -- cons(1, 2)

