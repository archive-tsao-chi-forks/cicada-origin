@datatype Exp {
  var(name: String): Exp
  fn(name: String, ret: Exp): Exp
  ap(target: Exp, arg: Exp): Exp
}

@datatype Ty {
  atom(name: String): Ty
  arrow(arg_t: Ty, ret_t: Ty): Ty
}

Ctx = Map(String, Ty)

@datatype Typing(ctx: Ctx, exp: Exp, t: Ty) {
  @given name: String
  lookup: Lookup(ctx, name, t)
  ----------------------------- lookup_var
  Typing(ctx, Exp.var(name), t)

  @given name: String, ret: Exp
  @given arg_t: Ty, ret_t: Ty
  ret_typing: Typing(Map.extend(ctx, name, arg_t), ret, ret_t)
  ------------------------------------------------------ arrow_intro
  Typing(ctx, Exp.fn(name, ret), Ty.arrow(arg_t, ret_t))

  @given target: Exp
  @given arg: Exp
  @given ret_t: Ty
  arg_t: Ty
  target_typing: Typing(ctx, target, Ty.arrow(arg_t, ret_t))
  arg_typing: Typing(ctx, arg, arg_t)
  --------------------------------------- arrow_elim
  Typing(ctx, Exp.ap(target, arg), ret_t)
}
