@module structure.category

@class Category {
  Object: Type
  Morphism(dom: Object, cod: Object): Type
  id(x: Object): Morphism(x, x)

  @given x: Object, y: Object, z: Object
  compose(f: Morphism(x, y), g: Morphism(y, z)): Morphism(x, z)

  @given x: Object, y: Object
  id_left(f: Morphism(x, y)): Equal(compose(id(x), f), f)

  @given x: Object, y: Object
  id_right(f: Morphism(x, y)): Equal(compose(f, id(y)), f)

  @given x: Object, y: Object, z: Object, w: Object
  compose_associative(
    f: Morphism(x, y),
    g: Morphism(y, z),
    h: Morphism(z, w),
  ): Equal(compose(f, compose(g, h)), compose(compose(f, g), h))
}

// NOTE without @given -- implicit arguments

@class Category [
  Object: Type
  Morphism(dom com: Object): Type
  id(x: Object): Morphism(x, x)

  compose(
    x y z: Object,
    f: Morphism(x, y),
    g: Morphism(y, z),
  ): Morphism(x, z)

  id_left(
    x y: Object,
    f: Morphism(x, y)
  ): Equal(compose(x, x, y)(id(x), f), f)

  id_right(
    x y: Object,
    f: Morphism(x, y),
  ): Equal(compose(x, y, y)(f, id(y)), f)

  compose_associative(
    x y z w: Object,
    f: Morphism(x, y),
    g: Morphism(y, z),
    h: Morphism(z, w),
  ): Equal(
    compose(x, y, w)(f, compose(y, z, w)(g, h)),
    compose(x, z, w)(compose(x, y, z)(f, g), h))
]
