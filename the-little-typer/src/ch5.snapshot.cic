// 5. Lists, Lists, and More Lists

// @def expectations
// @the List(String)
// @li cooked
// @li "eaten"
// @li "tried-cleaning"
// @li "understood"
// @li "slept"
// @nil

@def nat_rec_t
@the Type (
  T: Type,
  target: Nat,
  base: T,
  step: (prev: Nat, almost: T) -> T,
) -> T

@show nat_rec_t

@def List
@the (Type) -> Type
(_) => Type // NOTE not really

@def list_rec_t
@the Type (
  E: Type,
  target: List(E),
  T: Type,
  base: T,
  step: (head: E, tail: List(E), almost: T) -> T,
) -> T

@show list_rec_t

@def step_length_t
@the Type (E: Type) -> (head: E, tail: List(E), almost: Nat) -> Nat

@def length_t
@the Type (E: Type) -> (List(E)) -> Nat

@def append_t
@the Type (E: Type) -> (List(E), List(E)) -> List(E)

@def step_append_t
@the Type (E: Type) -> (head: E, tail: List(E), almost: List(E)) -> List(E)
