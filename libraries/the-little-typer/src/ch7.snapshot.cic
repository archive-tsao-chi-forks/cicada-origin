// 7. It All Depends On the Motive

@def nat_ind_t = (
  target: Nat,
  motive: (Nat) -> Type,
  base: motive(0),
  step: (prev: Nat, almost: motive(prev)) -> motive(add1(prev)),
) -> motive(target)

@def my_nat_ind: nat_ind_t = (target, motive, base, step) => nat_ind(target, motive, base, step)

@fn peas_mot(n: Nat): Type = Vector(String, n)
@fn peas_step(prev: Nat, almost: peas_mot(prev)): peas_mot(add1(prev)) = vec("pea", almost)
@fn peas(n: Nat): Vector(String, n) = nat_ind(n, peas_mot, vecnil, peas_step)

@show peas(6)

@fn last_mot(E: Type, n: Nat): Type =
  (Vector(E, add1(n))) -> E
@fn last_base(E: Type): last_mot(E, zero) =
  (vector) => vector_head(vector)
@fn last_step(E: Type, prev: Nat, almost: last_mot(E, prev)): last_mot(E, add1(prev)) =
  (vector) => almost(vector_tail(vector))
@fn last(E: Type, n: Nat): last_mot(E, n) =
  nat_ind(n, last_mot(E), last_base(E), last_step(E))

@show last(String, 3, @vec ["1", "2", "3", "LAST"])
