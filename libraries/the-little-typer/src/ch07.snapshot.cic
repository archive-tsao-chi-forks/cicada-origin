// 7. It All Depends On the Motive

def nat_ind_t = (
  target: Nat,
  motive: (Nat) -> Type,
  base: motive(0),
  step: (prev: Nat, almost: motive(prev)) -> motive(add1(prev)),
) -> motive(target)

def my_nat_ind: nat_ind_t = (target, motive, base, step) {
  nat_ind(target, motive, base, step)
}

// NOTE peas -- generate given number of peas

def peas_motive(n: Nat): Type {
  Vector(String, n)
}

def peas_step(prev: Nat, almost: peas_motive(prev)): peas_motive(add1(prev)) {
  vec("pea", almost)
}

def peas(n: Nat): Vector(String, n) {
  nat_ind(n, peas_motive, vecnil, peas_step)
}

peas(6)

// NOTE last -- get the last element of a vector

def last_motive(E: Type, n: Nat): Type {
  (Vector(E, add1(n))) -> E
}

def last_base(E: Type): last_motive(E, zero) {
  (vector) {
    vector_head(vector)
  }
}

def last_step(
  E: Type,
  prev: Nat,
  almost: last_motive(E, prev),
): last_motive(E, add1(prev)) {
  (vector) {
    almost(vector_tail(vector))
  }
}

def last(E: Type, n: Nat): last_motive(E, n) {
  nat_ind(
    n,
    last_motive(E),
    last_base(E),
    last_step(E))
}

last(String, 3, vec! ["1", "2", "3", "LAST"])

// NOTE drop_last -- drop the last element of a vector

def drop_last_motive(E: Type, n: Nat): Type {
  (Vector(E, add1(n))) -> Vector(E, n)
}

def drop_last_base(E: Type): drop_last_motive(E, zero) {
  (_vector) { vecnil }
}

def drop_last_step(
  E: Type,
  prev: Nat,
  almost: drop_last_motive(E, prev)
): drop_last_motive(E, add1(prev)) {
  (vector) {
    vec(vector_head(vector), almost(vector_tail(vector)))
  }
}

def drop_last(E: Type, n: Nat): drop_last_motive(E, n) {
  nat_ind(
    n,
    drop_last_motive(E),
    drop_last_base(E),
    drop_last_step(E))
}

drop_last(String, 3, vec! ["1", "2", "3", "LAST"])
