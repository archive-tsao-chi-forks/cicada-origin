@the Type [
  Object: Type
  Morphism: (dom: Object) -> (cod: Object) -> Type
  id: (x: Object) -> Morphism(x)(x)
  compose: (x: Object) -> (y: Object) -> (z: Object) -> (f: Morphism(x)(y)) -> (g: Morphism(y)(z)) -> Morphism(x)(z)
  id_left: (x: Object) -> (y: Object) -> (f: Morphism(x)(y)) -> Equal(Morphism(x)(y), compose(x)(x)(y)(id(x))(f), f)
  id_right: (x: Object) -> (y: Object) -> (f: Morphism(x)(y)) -> Equal(Morphism(x)(y), compose(x)(y)(y)(f)(id(y)), f)
  compose_associative: (x: Object) -> (y: Object) -> (z: Object) -> (w: Object) -> (f: Morphism(x)(y)) -> (g: Morphism(y)(z)) -> (h: Morphism(z)(w)) -> Equal(Morphism(x)(w), compose(x)(y)(w)(f)(compose(y)(z)(w)(g)(h)), compose(x)(z)(w)(compose(x)(y)(z)(f)(g))(h))
  inv: (x: Object) -> (y: Object) -> (f: Morphism(x)(y)) -> Morphism(y)(x)
  inv_iso: (x: Object) -> (y: Object) -> (f: Morphism(x)(y)) -> Isomorphism [
    cat: Category [
      Object: Type
      Morphism: (dom: Object) -> (cod: Object) -> Type
      id: (x1: Object) -> Morphism(x1)(x1)
      compose: (x1: Object) -> (y1: Object) -> (z: Object) -> (f1: Morphism(x1)(y1)) -> (g: Morphism(y1)(z)) -> Morphism(x1)(z)
      id_left: (x1: Object) -> (y1: Object) -> (f1: Morphism(x1)(y1)) -> Equal(Morphism(x1)(y1), compose(x1)(x1)(y1)(id(x1))(f1), f1)
      id_right: (x1: Object) -> (y1: Object) -> (f1: Morphism(x1)(y1)) -> Equal(Morphism(x1)(y1), compose(x1)(y1)(y1)(f1)(id(y1)), f1)
      compose_associative: (x1: Object) -> (y1: Object) -> (z: Object) -> (w: Object) -> (f1: Morphism(x1)(y1)) -> (g: Morphism(y1)(z)) -> (h: Morphism(z)(w)) -> Equal(Morphism(x1)(w), compose(x1)(y1)(w)(f1)(compose(y1)(z)(w)(g)(h)), compose(x1)(z)(w)(compose(x1)(y1)(z)(f1)(g))(h))
    ] = {
      Object: cat.Object
      Morphism: (dom) => (cod) => cat.Morphism(dom)(cod)
      id: (x1) => cat.id(x1)
      compose: (x1) => (y1) => (z) => (f1) => (g) => cat.compose(x1)(y1)(z)(f1)(g)
      id_left: (x1) => (y1) => (f1) => cat.id_left(x1)(y1)(f1)
      id_right: (x1) => (y1) => (f1) => cat.id_right(x1)(y1)(f1)
      compose_associative: (x1) => (y1) => (z) => (w) => (f1) => (g) => (h) => cat.compose_associative(x1)(y1)(z)(w)(f1)(g)(h)
    }
    dom: cat.Object = x
    cod: cat.Object = y
    morphism: cat.Morphism(x)(y) = f
    inverse: cat.Morphism(y)(x) = inv(x)(y)(f)
    inverse_left: Equal(cat.Morphism(x)(x), cat.compose(x)(y)(x)(f)(inv(x)(y)(f)), cat.id(x))
    inverse_right: Equal(cat.Morphism(y)(y), cat.compose(y)(x)(y)(inv(x)(y)(f))(f), cat.id(y))
  ]
]
