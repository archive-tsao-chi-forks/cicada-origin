let bool_t = class {
  given tag : string_t
}

let true_t = class {
  define tag : string_t = "true"
}

let false_t = class {
  define tag : string_t = "false"
}

object true {
  let tag = "true"
}

object false {
  let tag = "false"
}

@refuse true : false_t

define not : {
  given x : bool_t
  conclude bool_t
} = {
  given x : bool_t
  return switch x {
    case false_t => true
    case true_t => false
  }
}

@show bool_t
@show true_t

@show true
@show false

@equal not(true) = false
@equal not(false) = true

@refuse true : union { case false_t }
@refuse false : union { case true_t }
@accept true : union { case true_t case false_t }
@accept false : union { case true_t case false_t }
@accept true : bool_t
@accept false : bool_t
