class nat_t {
  __club_name__ : string_t = "nat_t"
  __member_name__ : string_t
}

class zero_t {
  __club_name__ : string_t = "nat_t"
  __member_name__ : string_t = "zero_t"
}

class succ_t {
  __club_name__ : string_t = "nat_t"
  __member_name__ : string_t = "succ_t"
  prev : nat_t
}

succ : {
  x : nat_t -> succ_t(x)
} = {
  x : nat_t => {
    __club_name__ = "nat_t"
    __member_name__ = "succ_t"
    prev = x
  }
}

zero = {
  __club_name__ = "nat_t"
  __member_name__ = "zero_t"
}
one = succ(zero)
two = succ(one)
three = succ(two)
four = succ(three)
five = succ(four)
six = succ(five)

@accept zero : nat_t
@accept zero : zero_t
@accept one : nat_t

@accept one : succ_t
@accept one : succ_t(zero)
@refuse zero : succ_t

// nat_add : { x : nat_t, y : nat_t -> nat_t } = choice {
//   case x : succ_t, y : nat_t => succ(nat_add(x.prev, y))
//   case x : zero_t, y : nat_t => y
// }

// nat_mul : { x : nat_t, y : nat_t -> nat_t } = choice {
//   case x : succ_t, y : nat_t => nat_add(y, nat_mul(x.prev, y))
//   case x : zero_t, y : nat_t => zero
// }

// @eq nat_add(zero, zero) = zero
// @eq nat_add(one, zero) = one
// @eq nat_add(zero, one) = one
// @eq nat_add(one, two) = three
// @eq nat_add(two, one) = three
// @eq nat_add(two, two) = four
// @eq nat_add(two, three) = five
// @eq nat_add(three, two) = five

// @eq nat_mul(zero, zero) = zero
// @eq nat_mul(one, zero) = zero
// @eq nat_mul(zero, one) = zero
// @eq nat_mul(one, two) = two
// @eq nat_mul(two, one) = two
// @eq nat_mul(two, two) = four
// @eq nat_mul(two, three) = six
// @eq nat_mul(three, two) = six
