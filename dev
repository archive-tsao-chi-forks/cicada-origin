#!/usr/bin/env node

const path = require("path")
const changeCase = require("change-case")
const { run, test, expect, snapshot } = require("@xieyuheng/test-runner")

let commands = {}

commands.t = () => {
  commands.test_lib()
  commands.test_impression()
  commands.test_lang0()
  commands.test_lang1()
  commands.test_lang2()
  commands.test_partech()
}

commands.test_lib = () => {
  test("node $file", { file: "lib/**/*.test.js" }, expect.ok)
}

commands.test_impression = () => {
  test(
    "node $file",
    { file: "lib/**/*.impression.js" },
    snapshot.out(({ file }) =>
      path.resolve("snapshot", changeCase.paramCase(file) + ".out")
    )
  )
}

commands.test_lang0 = () => {
  test(
    "./bin/lang0.js $file",
    { file: "tests/lang0/**.cic" },
    snapshot.out(({ file }) => file + ".out")
  )
}

commands.test_lang1 = () => {
  test(
    "./bin/lang1.js $file",
    { file: "tests/lang1/**.cic" },
    snapshot.out(({ file }) => file + ".out")
  )
  test(
    "./bin/lang1.js $file",
    { file: "tests/lang1-error/**.cic" },
    snapshot.err(({ file }) => file + ".err")
  )
}

commands.test_lang2 = () => {
  test(
    "./bin/lang2.js $file",
    { file: "tests/lang2/**.cic" },
    snapshot.out(({ file }) => file + ".out")
  )
  test(
    "./bin/lang2.js $file",
    { file: "tests/lang2-error/**.cic" },
    snapshot.err(({ file }) => file + ".err")
  )
}

commands.test_partech = () => {
  commands.test_partech_lex()
}

commands.test_partech_lex = () => {
  test(
    "./bin/partech.js lex $file --table $file",
    { file: "tests/tables/common.table.yaml" },
    snapshot.out((_) => "tests/tables/common.tokens.json")
  )

  test(
    "./bin/partech.js lex $file --table $file --output $output",
    { file: "tests/tables/common.table.yaml",
      output: "tests/tables/common.tokens.yaml" },
    expect.ok
  )
}

run(commands)
