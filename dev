#!/usr/bin/env node

const path = require("path")
const fg = require("fast-glob")
const changeCase = require("change-case")
const run = require("./scripts/run")
const expect = require("./scripts/expect")
const snapshot = require("./scripts/snapshot")
require("./scripts/exit-on-unhandled-rejection")

let dev = {}

dev.t = () => {
  dev.test_lib()
  dev.test_impression()
  dev.test_lang0()
  dev.test_lang1()
  dev.test_lang2()
}

dev.test_lib = () => {
  for (const file of fg.sync("lib/**/*.test.js")) {
    expect.ok(`node ${file}`)
  }
}

dev.test_impression = () => {
  for (const file of fg.sync("lib/**/*.impression.js")) {
    snapshot.out(`node`, file, {
      snapshot: {
        out: path.resolve("snapshot", changeCase.paramCase(file) + ".out"),
      },
    })
  }
}

dev.test_lang0 = () => {
  snapshot.out("./bin/lang0.js", "tests/lang0/**.cic")
}

dev.test_lang1 = () => {
  snapshot.out("./bin/lang1.js", "tests/lang1/**.cic")
  snapshot.err("./bin/lang1.js", "tests/lang1-error/**.cic")
}

dev.test_lang2 = () => {
  snapshot.out("./bin/lang2.js", "tests/lang2/**.cic")
  snapshot.err("./bin/lang2.js", "tests/lang2-error/**.cic")
}

run(dev)
