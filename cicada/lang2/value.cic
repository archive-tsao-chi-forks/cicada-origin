@module lang2

@datatype Value {
  pi(arg_t: Value, ret_t_cl: Closure): Value
  fn(closure: Closure): Value

  sigma(car_t: Value, cdr_t_cl: Closure): Value
  cons(car: Value, cdr: Value): Value

  nat: Value
  zero: Value
  add1(prev: Value): Value

  equal(t: Value, from: Value, to: Value): Value
  same: Value

  trivial: Value
  sole: Value

  absurd: Value

  str: Value
  quote(str: String): Value

  type: Value

  reflection(t: Value, neutral: Neutral): Value
}
