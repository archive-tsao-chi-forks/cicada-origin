@module lang3

@judgment Check(ctx: Map(String, Value), exp: Exp, t: Value) {
  Check(ctx, Exp.obj(Map.empty), Value.type)
  ----------------------------------------- obj_type_empty

  Check(ctx, Exp.obj(Map.extend(properties, name, exp)), Value.type)
  ------------------------------------------------------------ obj_type_extend
  Check(ctx, exp, Value.type)
  Check(ctx, Exp.obj(properties), Value.type)

  Check(ctx, Exp.obj(properties), Value.obj({ next: null }))
  ---------------------------------------------- obj_end

  Check(ctx, Exp.obj(properties), Value.obj(tel))
  ---------------------------------------------------------------- obj_next
  Map.Lookup(properties, name, exp)
  Check(ctx, name, exp, t)
  Check(ctx, Exp.obj(less_properties), Value.obj(filled_tel))
  @where {
    { name, t } = tel.next
    less_properties = Map.delete(properties, name)
    value = Exp.evaluate(Ctx.to_env(ctx), exp)
    filled_tel = Telescope.fill(tel, value)
  }
}
