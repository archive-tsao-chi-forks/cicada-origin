@module lang1

// -- check constructors --

Exp.check(Map(String, Ty), Exp, Ty): Trivial

Exp.check(ctx, Exp.fn(name, ret), Ty.arrow(arg_t, ret_t)) =
  Exp.check(Map.extend(ctx, name, arg_t), ret, ret_t)

// -- infer variable and eliminators --

Exp.infer(Map(String, Ty), Exp): Ty

Exp.infer(ctx, Exp.v(name)) = Map.lookup(ctx, name)

Exp.infer(ctx, Exp.ap(target, arg)) = ret_t @where {
  Exp.infer(ctx, target) >>> Ty.arrow(arg_t, ret_t)
  Exp.check(ctx, arg, arg_t)
}
