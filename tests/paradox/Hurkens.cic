// https://github.com/agda/agda/blob/master/test/Succeed/Hurkens.agda

Bottom: Type = (A: Type) -> A

Not(A: Type): Type {
  (A) -> Bottom
}

P(A: Type): Type {
  (A) -> Type
}

U0(X: Type): Type {
  P(P(X))
}

U1(X: Type): Type {
  (U0(X)) -> X
}

U2(X: Type): Type {
  (U1(X)) -> U0(X)
}

U: Type = (X: Type) -> U2(X)

tauon(t: P(P(U))): U {
  (X) {
    (f) {
      (p) {
        t((x) {
          p(f(x(X, f)))
        })
      }
    }
  }
}

sigma(s: U): P(P(U)) {
  s(U, (t) { tauon(t) })
}

delta: P(U) = (y) {
  Not((p: P(U), _: sigma(y, p)) -> p(tauon(sigma(y))))
}

//omega: Type = tauon((p) {
//  (x: Type, _: sigma(x, p)) -> p(x)
//})
