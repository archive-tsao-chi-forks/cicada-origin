@def add: (Nat, Nat) -> Nat =
  (x, y) => nat_ind(y, (_) => Nat, x, (prev, almost) => add1(almost))

@def my_nat_which: (target: Nat) -> (T: Type) -> (base: T) -> (step: (prev: Nat) -> T) -> T =
  (target, T, base, step) => nat_ind(target, (_) => T, base, (prev, _almost) => step(prev))

@def gauss: (Nat) -> Nat =
  (n) => my_nat_which(n, Nat, 0, (prev) => add(add1(prev), gauss(prev)))
